{"version":3,"sources":["Components/Form/Form.module.css","Components/Form/Button/Button.module.css","Components/SectionH1/SectionH1.module.css","Components/Contacts/Contacts.module.css","Components/SectionH2/SectionH2.module.css","redux/actions.js","redux/reducers.js","redux/store.js","Components/Form/Button/Button.jsx","Components/Form/InputName/InputName.jsx","Components/Form/InputTel/InputTel.jsx","Components/Form/Form.jsx","Components/SectionH1/SectionH1.jsx","Components/Contacts/ButtonDelete/ButtonDelete.jsx","redux/selectors.js","Components/Contacts/Contacts.jsx","Components/SectionH2/SectionH2.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","filterContacts","contacts","createReducer","state","action","payload","filter","contact","id","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","devtools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storeConf","persistor","persistStore","Button","type","text","className","s","submitBtn","InputName","value","onChange","nameLabel","inputField","name","pattern","title","required","InputTel","Form","useState","setName","number","setNumber","dispatch","useDispatch","clearForm","handleChange","target","form","onSubmit","e","preventDefault","uuidv4","SectionH1","children","h1","ButtonDelete","onClick","filterValue","filterteredContacts","toLowerCase","includes","trim","Contacts","useSelector","map","SectionH2","h2","Filter","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e47878cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2K8QP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"Button_submitBtn__3ZqGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"SectionH1_h1__3EExo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__l_NgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"SectionH2_h2__2W9ug\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/addContact');\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\nexport const filterContacts = createAction('contacts/filterContacts');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from './actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nconst rootReducer = combineReducers({ contacts, filter });\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from './reducers';\r\n\r\n// const store = configureStore();\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devtools: true,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\nconst persistor = persistStore(store);\r\nconst storeConf = { store, persistor };\r\n\r\nexport default storeConf;\r\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ type, text }) {\n  return (\n    <button className={s.submitBtn} type={type}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './InputName.module.css';\n\nexport default function InputName({ value, onChange }) {\n  return (\n    <label className={s.nameLabel}>\n      Name\n      <input\n        className={s.inputField}\n        onChange={onChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n      />\n    </label>\n  );\n}\n\nInputName.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport default function InputTel({ value, onChange }) {\n  return (\n    <label className=\"nameLabel\">\n      Number\n      <input\n        onChange={onChange}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={value}\n      />\n    </label>\n  );\n}\nInputTel.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport Button from './Button';\nimport InputName from './InputName';\nimport InputTel from './InputTel';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/actions';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number, id: uuidv4() }));\n    // onSubmit({ name: name, number: number });\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={s.form} name=\"addContact\" onSubmit={handleSubmit}>\n      <InputName value={name} onChange={handleChange} name=\"name\"></InputName>\n      <InputTel value={number} onChange={handleChange} name=\"number\" />\n      <Button type=\"submit\" text=\"Add contact\"></Button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './SectionH1.module.css';\n\nexport default function SectionH1({ title, children }) {\n  return (\n    <section>\n      <h1 className={s.h1}>{title}</h1>\n      <div>{children}</div>\n    </section>\n  );\n}\n\nSectionH1.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n\nexport default function ButtonDelete({ type, text, id, onClick }) {\n  return (\n    <button type={type} onClick={() => onClick(id)}>\n      {text}\n    </button>\n  );\n}\n\nButtonDelete.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n","export const filterValue = state => state.filter;\r\nexport const filterteredContacts = ({ contacts, filter }) =>\r\n  contacts.filter(contact => contact.name.toLowerCase().includes(filter.trim().toLowerCase()));\r\n","import s from './Contacts.module.css';\nimport ButtonDelete from './ButtonDelete';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterteredContacts } from '../../redux/selectors';\nimport { deleteContact } from '../../redux/actions';\n\nexport default function Contacts() {\n  const contacts = useSelector(filterteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li className={s.contact} key={contact.id}>\n            {contact.name}: {contact.number}{' '}\n            <ButtonDelete\n              type=\"button\"\n              text=\"Delete\"\n              id={contact.id}\n              onClick={() => {\n                dispatch(deleteContact(contact.id));\n              }}\n            ></ButtonDelete>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './SectionH2.module.css';\n\nexport default function SectionH2({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.h2}>{title}</h2>\n      <div>{children}</div>\n    </section>\n  );\n}\n\nSectionH2.propTypes = {\n  title: PropTypes.string,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/actions';\nimport { filterValue } from '../../redux/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(filterValue);\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        name=\"filter\"\n        type=\"text\"\n        onChange={e => {\n          dispatch(filterContacts(e.target.value));\n        }}\n        value={filter}\n      />\n    </label>\n  );\n}\n","import './App.css';\n\nimport Form from './Components/Form';\nimport SectionH1 from './Components/SectionH1';\nimport Contacts from './Components/Contacts';\nimport SectionH2 from './Components/SectionH2';\nimport Filter from './Components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <>\n      <SectionH1 title=\"Phonebook\">\n        <Form></Form>\n      </SectionH1>\n      <SectionH2 title=\"Contacts\">\n        <Filter />\n        <Contacts></Contacts>\n      </SectionH2>\n    </>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate\r\n        loading={null} /*отображается вместо APP пока данные загружаются из LocalStorage */\r\n        // onBeforeLift={() => new Promise(resolve => setTimeout(resolve, 3000))}  /* задержка, кот. позволит дольше показывать Loading*/\r\n        persistor={store.persistor}\r\n      >\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}